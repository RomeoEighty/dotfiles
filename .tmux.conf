# [short command]
# set-option        -> set
# set-window-option -> setw
# bind-key          -> bind
# unbind-key        -> unbind

# OS X

# login shell - Homebrew Z-Shell
# set -g default-shell /usr/local/bin/zsh

# set -g default-command "reattach-to-user-namespace -l zsh"
# Setup 'v' to begin selection as in Vim
# Setup 'y' to yank as in Vim
if-shell 'uname | grep -q Darwin' \
    "set -g default-shell /usr/local/bin/zsh; \
     set -g default-command 'reattach-to-user-namespace -l zsh'"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ] && uname | grep -q Darwin' \
    "bind-key -Tcopy-mode-vi 'v' send -X begin-selection; \
     bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 ] && uname | grep -q Darwin' \
    "bind -t vi-copy v begin-selection; \
     bind -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ] && uname | grep -q Linux' \
    "set -g default-shell /usr/bin/zsh; \
     bind-key -Tcopy-mode-vi v send -X begin-selection; \
     bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 ] && uname | grep -q Linux' \
    "set -g default-shell /usr/bin/zsh; \
     bind -t vi-copy v begin-selection; \
     bind -t vi-copy y copy-pipe 'xlip -in -selection clipboard'"
# OS dependent end



# escape-time
set -s escape-time 50

# enable mouse
set -g mouse on

# remap prefix from 'C-b' to 'C-g'
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# 256 colors
set -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# Limit number of restored rows to:
set -g history-limit 10000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Change pane with Vi-like keybindings
bind j select-pane -D #down
bind k select-pane -U #up
bind h select-pane -L #left
bind l select-pane -R #right

# split view
bind | split-window -h
bind - split-window -v
bind \ split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# swap pane
bind ( swapp -U
bind ) swapp -D

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#unbind -Tcopy-mode-vi Enter
#bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"


# Clock colour
setw -g clock-mode-colour colour249

# Make `Ctrl+B R` reload the config file
unbind r
bind r source-file ~/.tmux.conf

# ======================================
# DISPLAY
# ======================================
set -g status-position top

set -g status-left-length 90
set -g status-right-length 90

# #H : machine name
# #P : pane number
# display left
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) >= 2.4" | bc) -eq 1 ]' \
    "set -g status-left '[tmux#{version}] #H:[#P]'"

# version 2.3 doesn't have version in Variable
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2) < 2.4" | bc) -eq 1 ]' \
    "set -g status-left '#H:[#P]'"

# update status every second
set -g status-interval 2
set -g status-right "#[fg=green,bg=black]#(tmux-mem-cpu-load --color --powerline-right --interval 2 --mem-mode 1 --averages-count 0 )#[default]"
