# [short command]
# set-option        -> set
# set-window-option -> setw
# bind-key          -> bind
# unbind-key        -> unbind

# OS X

# login shell - Homebrew Z-Shell

# set -g default-command "reattach-to-user-namespace -l zsh"
# Setup 'v' to begin selection as in Vim
# Setup 'y' to yank as in Vim
# 'tmux -V' command output format is indefinite, like 'tmux 2.4', 'tmux 2.5-rc' and 'tmux 2.9a'
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-8)"
run-shell "tmux setenv -g TMUX_HOMEBREW_PREFIX $(brew --prefix)"
# set -g default-shell ${TMUX_HOMEBREW_PREFIX}/bin/zsh
if-shell 'uname | grep -q Darwin' \
    "set -g default-shell ${TMUX_HOMEBREW_PREFIX}/bin/zsh; \
     set -g default-command 'reattach-to-user-namespace -l zsh'"

if-shell '[ $(echo "${TMUX_VERSION} >= 2.4" | bc) -eq 1 ] && uname | grep -q Darwin' \
    "bind-key -Tcopy-mode-vi 'v' send -X begin-selection; \
     bind-key -Tcopy-mode-vi 'y' send -X copy-pipe 'reattach-to-user-namespace pbcopy'"

if-shell '[ $(echo "${TMUX_VERSION} < 2.4" | bc) -eq 1 ] && uname | grep -q Darwin' \
    "bind -t vi-copy v begin-selection; \
     bind -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'"

if-shell '[ $(echo "${TMUX_VERSION} >= 2.4" | bc) -eq 1 ] && uname | grep -q Linux' \
    "set -g default-shell /usr/bin/zsh; \
     bind-key -Tcopy-mode-vi v send -X begin-selection; \
     bind-key -Tcopy-mode-vi y send -X copy-pipe 'xclip -in -selection clipboard'"

if-shell '[ $(echo "${TMUX_VERSION} < 2.4" | bc) -eq 1 ] && uname | grep -q Linux' \
    "set -g default-shell /usr/bin/zsh; \
     bind -t vi-copy v begin-selection; \
     bind -t vi-copy y copy-pipe 'xlip -in -selection clipboard'"
# OS dependent end

# escape-time
set -s escape-time 50

# enable mouse
set -g mouse on

# use C-q as prefix on local machine
if-shell '[ ! -n "${SSH_CLIENT}" ]' \
    "unbind C-b; \
     set -g prefix C-q; \
     bind C-q send-prefix" #\
    "unbind C-b; \
     set -g prefix C-\; \
     bind C-\ send-prefix"

# Limit number of restored rows to:
set -g history-limit 10000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Change pane with Vi-like keybindings
bind j select-pane -D #down
bind k select-pane -U #up
bind h select-pane -L #left
bind l select-pane -R #right

# split view
bind | split-window -h
bind 'M-\' select-layout even-horizontal
bind _ split-window -v
bind M-- select-layout even-vertical
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# swap pane
bind H swap-pane -U
bind L swap-pane -D

bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send-keys -X cancel

# Clock colour
setw -g clock-mode-colour colour249
# window style
set -g window-style fg=colour250,bg=colour235
set -g window-active-style fg=white,bg=black
# border syle
set -g pane-border-style fg=black,bg=colour235
set -g pane-active-border-style fg=colour234,bg=colour234

# Make `Ctrl+B R` reload the config file
unbind r
bind r 'source-file ~/.tmux.conf; display "Reload configure file"'

bind @ display 'at-mark'

# ======================================
# DISPLAY
# ======================================
set -g focus-events on
set -g status-position top

set -g status-left-length 90
set -g status-right-length 90

# #H : machine name
# #P : pane number

if-shell '[ ! -n "${SSH_CLIENT}" ]' \
    "set -g status-style fg=white,bg=colour237" \
    "set -g status-style fg=black,bg=white,underscore,bold"

# display left
if-shell '[ $(echo "${TMUX_VERSION} >= 2.4" | bc) -eq 1 ]' \
    "set -g status-left '[Ver. #{version}] #{host}  '"

# version 2.3 doesn't have version in Variable
if-shell '[ $(echo "${TMUX_VERSION} < 2.4" | bc) -eq 1 ]' \
    "set -g status-left '#H:[#P]'"

setw -g window-status-format "#[fg=colour249,bg=colour234] #{window_name} #F "
setw -g window-status-current-format "#[fg=colour255,bg=colour242] #{window_name} #F "

# update status every second
set -g status-interval 2
if-shell '[ "$(uname)" == "Darwin" ]' \
    "set -g status-right '#[fg=black,bg=white]xkb:#(~/Develop/git/xkbswitch-macosx/bin/xkbswitch -ge) mine:#(~/dotfiles/getInputSource.bash)#(tmux-mem-cpu-load --color --interval 2 --mem-mode 1 --cpu-mode 1 --averages-count 0 )#[default]'" \
    "set -g status-right '#[fg=black,bg=white]#(tmux-mem-cpu-load --color --interval 2 --mem-mode 1 --cpu-mode 1 --averages-count 0 )#[default]#( /opt/vc/bin/vcgencmd measure_temp | cut -d = -f 2)'"
#set -g status-right "#[fg=green,bg=black]#(tmux-mem-cpu-load --color --powerline-right --interval 2 --mem-mode 1 --averages-count 0 )#[default]"

# 256 colors
# This is what TERM will be inside the tmux session
set -g default-terminal "tmux-256color"
# This tells tmux to enable full colors if TERM outside is xterm-256color
set -ga terminal-overrides ",xterm-256color:RGB"
set -sa terminal-overrides ",*:U8=0"
